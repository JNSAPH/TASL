{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/info-card/info-card.component.ts","./src/app/info-card/info-card.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/newshort/newshort.component.ts","./src/app/newshort/newshort.component.html","./src/app/urllist/urllist.component.ts","./src/app/urllist/urllist.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { InfoCardComponent } from './info-card/info-card.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'admin/login', component: LoginComponent},\r\n  { path: '', component: DashboardComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, HostListener } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\nexport class AppComponent{\r\n  title = 'TASL';\r\n\r\n  constructor(private router: Router) { }\r\n  \r\n  checkStatus(){\r\n    return localStorage.getItem(\"loggedin\")\r\n  }\r\n\r\n  logout(){\r\n    localStorage.clear();\r\n    this.router.navigateByUrl(\"admin/login\");\r\n  }\r\n\r\n  @HostListener(\"window:beforeunload\",[\"$event\"])\r\n  clearLocalStorage(event){\r\n      localStorage.clear();\r\n  }\r\n}\r\n","<nb-layout>\r\n  <nb-layout-header>\r\n    <p class=\"title\">TASL App</p>\r\n\r\n    <div class=\"right\">\r\n      <button shape=\"round\" nbButton *ngIf=\"checkStatus()\" (click)=\"logout()\">\r\n        Logout\r\n      </button>\r\n    </div>\r\n  </nb-layout-header>\r\n  <nb-layout-column>\r\n    <router-outlet></router-outlet>\r\n  </nb-layout-column>\r\n</nb-layout>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NbThemeModule, NbLayoutModule, NbButtonModule, NbCardModule, NbInputDirective, NbInputModule, NbListModule, NbToastrModule, NbUserModule } from '@nebular/theme';\r\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\r\nimport { URLListComponent } from './urllist/urllist.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NewshortComponent } from './newshort/newshort.component';\r\nimport { InfoCardComponent } from './info-card/info-card.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    URLListComponent,\r\n    NewshortComponent,\r\n    InfoCardComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    NbThemeModule.forRoot({ name: 'default' }),\r\n    NbToastrModule.forRoot(),\r\n    NbLayoutModule,\r\n    NbEvaIconsModule,\r\n    HttpClientModule,\r\n    NbButtonModule,\r\n    NbInputModule,\r\n    NbCardModule,\r\n    NbListModule,\r\n    NbUserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NbToastrService } from '@nebular/theme';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private router: Router, private toastrService: NbToastrService) { }\n\n  ngOnInit(): void {\n     {\n       if (!localStorage.getItem('loggedin')) this.router.navigateByUrl(\"admin/login\");\n       this.showToast(\"top-right\", \"info\", \"Login\", \"Successfully logged in!\")\n    }\n  }\n\n\n\n  showToast(position, status, head, description) {\n    this.toastrService.show(\n      description,\n      head,\n      { position, status });\n  }\n\n}\n","<app-info-card #infocard></app-info-card>\n    \n<app-newshort #addui (newAdded)=\"list.ngOnInit(); infocard.ngOnInit()\"></app-newshort>\n<app-urllist #list (removedEntry)=\"infocard.ngOnInit();\"></app-urllist>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\n\r\n@Component({\r\n  selector: 'app-info-card',\r\n  templateUrl: './info-card.component.html',\r\n  styleUrls: ['./info-card.component.scss']\r\n})\r\nexport class InfoCardComponent implements OnInit {\r\n  readonly ROOT_URL = \"http://localhost:3000/TASL\"\r\n  response: any;\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.http.get(this.ROOT_URL + '/getStats')\r\n    .subscribe((data) => {\r\n      this.response = data\r\n      console.log(data)\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row\" style=\"text-align: center\">\r\n    <div class=\"col\">\r\n        <nb-card>\r\n            <nb-card-body>\r\n                <p class=\"title\">Shortend URLs</p>\r\n                <p class=\"description\">{{response.totalUrls}}</p>\r\n            </nb-card-body>\r\n        </nb-card>\r\n    </div>\r\n    <div class=\"col\">\r\n        <nb-card>\r\n            <nb-card-body>\r\n                <p class=\"title\">Total Clicks on Links</p>\r\n                <p class=\"description\">{{response.totalClicks}}</p>\r\n            </nb-card-body>\r\n        </nb-card>\r\n    </div>\r\n    <div class=\"col\">\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n\r\n  readonly ROOT_URL = \"http://localhost:3000/TASL\"\r\n  response: any;\r\n  accent: any;\r\n  error: any;\r\n\r\n  constructor(private http: HttpClient, private router: Router,) { }\r\n\r\n  login(uname, pword){\r\n    localStorage.setItem('loggedin', 'true');\r\n    this.http.post(this.ROOT_URL + '/login', {}, {\r\n      headers: new HttpHeaders({\r\n        'username':uname,\r\n        'password':pword\r\n      }),\r\n    })\r\n    .subscribe((data: any) => {\r\n      console.log(data)\r\n      if (data.code == 200) {\r\n        this.accent = \"success\" \r\n        localStorage.setItem(\"loggedin\", \"true\") \r\n        localStorage.setItem(\"jwt\", data.token)\r\n        this.router.navigate(['/'])\r\n      } else {\r\n        this.accent = \"danger\" \r\n        localStorage.clear();\r\n      }\r\n\r\n      this.error = data.message;\r\n    })\r\n  }\r\n}\r\n","<div>\n    <nb-card accent=\"{{accent}}\">\n        <nb-card-header>\n            <p class=\"title\">Login</p>\n        </nb-card-header>\n        <nb-card-body>\n\n                <input #uname type=\"text\" nbInput shape=\"round\" fieldSize=\"large\" placeholder=\"Username\" required> \n                <br><br>\n                <input #pword type=\"password\" nbInput shape=\"round\" fieldSize=\"large\" placeholder=\"Password\" required>\n                <br><br>\n                <button nbButton status=\"primary\" (click)=\"login(uname.value, pword.value)\">Login</button>\n                <br><br>\n                <b>{{error}}</b>\n                <p>If this is the first that you login please change the Password & Username in the Config File!</p>\n \n        </nb-card-body>\n    </nb-card>\n</div>","import { Component, OnInit, Output, EventEmitter} from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http'\r\nimport { NbToastrService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'app-newshort',\r\n  templateUrl: './newshort.component.html',\r\n  styleUrls: ['./newshort.component.scss']\r\n})\r\n\r\n\r\nexport class NewshortComponent {\r\n\r\n  @Output() newAdded = new EventEmitter();\r\n\r\n  readonly ROOT_URL = \"http://localhost:3000/TASL\"\r\n  response: any;\r\n\r\n  constructor(private http: HttpClient, private toastrService: NbToastrService) {}\r\n\r\n  makeid(length) {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n  newShort(long, short) {\r\n    this.http.post(this.ROOT_URL + '/createShort', long, {\r\n      headers: new HttpHeaders({\r\n        'Authorization':localStorage.getItem('jwt'),\r\n        'long':long,\r\n        'short':!short ? this.makeid(5) : short\r\n      })\r\n    })\r\n    .subscribe((data: any) => {\r\n      this.newAdded.emit();\r\n\r\n      if (data.code == 400) {\r\n        this.showToast('top-right', 'danger', 'Error!', 'Please supply a URL before clicking on Shorten');\r\n      } else {\r\n        this.showToast('top-right', 'success', \"Success!\", 'New Short-URL Generated');\r\n      }\r\n\r\n    })\r\n  }\r\n  \r\n  showToast(position, status, head, description) {\r\n    this.toastrService.show(\r\n      description,\r\n      head,\r\n      { position, status });\r\n  }\r\n\r\n}\r\n// Event name: newAdded","<nb-card>\n    <nb-card-body>\n      <div style=\"width: 100%\">\n        <p class=\"title\">Create new Short URL</p>\n        <div class=\"row\" style=\"text-align: center\">\n          <div class=\"col\">\n            <label>\n              <input #long type=\"url\" nbInput shape=\"round\" fullWidth=\"true\" placeholder=\"httos://google.com/\">\n            </label>\n          </div>\n          <div>\n            <input #short type=\"text\" nbInput shape=\"round\" placeholder=\"URL Code\">\n            <button nbButton status=\"primary\" shape=\"round\" (click)=\"newShort(long.value, short.value)\">Shorten</button> <!-- EMIT EVENT PLS -->\n          </div>\n        </div>\n      </div>\n    </nb-card-body>\n  </nb-card>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\n\r\n@Component({\r\n  selector: 'app-urllist',\r\n  templateUrl: './urllist.component.html',\r\n  styleUrls: ['./urllist.component.scss']\r\n})\r\nexport class URLListComponent implements OnInit {\r\n\r\n  @Output() removedEntry = new EventEmitter();\r\n\r\n  readonly ROOT_URL = \"http://localhost:3000/TASL\"\r\n  response: any;\r\n  website_url: string = document.location.origin;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public ngOnInit(): void {\r\n    this.http.get(this.ROOT_URL + '/getShortDetails')\r\n      .subscribe((data) => {\r\n        this.response = data\r\n      });\r\n  }\r\n\r\n  // Currently a POST request\r\n  deleteShort(short) {\r\n    this.http.post(this.ROOT_URL + '/deleteShort', short, {\r\n      headers: new HttpHeaders({\r\n        'authorization':localStorage.getItem('jwt'),\r\n        'short': short\r\n      })\r\n    })\r\n    .subscribe((data: any) => {\r\n      this.ngOnInit();\r\n      this.removedEntry.emit();\r\n    })\r\n  } \r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col\">\r\n        <nb-card>\r\n            <nb-card-body>\r\n                <p class=\"title\">All Shortend URLs</p>\r\n\r\n                <table style=\"width: 100%\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Full URL</th>\r\n                            <th>URL Code</th>\r\n                            <th>Clicks</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngFor=\"let resp of response\">\r\n                        <tr>\r\n                            <td #full style=\"max-width: 200px; overflow: hidden;\">{{resp.full}}</td>\r\n                            <td #short style=\"max-width: 200px; overflow: hidden\"><a href=\"{{website_url + '/' + resp.short}}\">{{resp.short}}</a></td>\r\n                            <td>{{resp.clicks}}</td>\r\n                            <td><button nbButton status=\"danger\" shape=\"round\" (click)=\"deleteShort(resp.short)\"></button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </nb-card-body>\r\n        </nb-card>\r\n    </div>\r\n    <div class=\"col\">\r\n        <nb-card-body>\r\n            <!--\r\n                - Link Preview\r\n                - Settings\r\n                - Stats\r\n            -->\r\n        </nb-card-body>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}